esphome:
  name: cover
  friendly_name: cover
  # platformio_options:
  #   board_build.flash_mode: dio
  #   board_build.mcu: esp32c3

# esp32:
#   board: esp32-c3-devkitm-1
#   variant: esp32c3
#   framework:
#     type: esp-idf

esp32:
  board: nodemcu-32s 
  framework:
    type: esp-idf

# Enable logging
logger:
  # hardware_uart: USB_SERIAL_JTAG
  level: DEBUG # defaults to DEBUG, NONE ERROR WARN INFO DEBUG VERBOSE VERY_VERBOSE

packages:
  wifi: !include wifi.yaml

# Enable Home Assistant API
api:
  encryption:
    key: "D/3uDolgFaZy9b7Y1TYDaDNWtpAHb9mXNaovsphP6WA="

ota:
  password: "8579165d2aa49681efdf4f8e9d1d18c7"


captive_portal:


# data: "0000 006D 0029 0000 00BC 003C 000E 001D 000E 001D 000E 001D 000E 001D 001C 000F 001C 000F 001C 000F 001C 0010 000E 001D 000E 001D 001C 000F 001C 000F 000E 001D 000E 001D 001C 000F 001C 0010 001C 000F 001C 000F 001C 000F 001C 000F 000E 001D 001C 000F 001C 000F 001C 0010 000D 001E 001C 0010 000D 001E 000E 001D 000E 001D 000E 001E 001B 0010 001B 0010 000D 001E 001C 0010 000D 001E 001B 000F 000D 001E 001B 0010 000D 001E 001C 0150"
script:
  - id: rf_up
    then:
      - remote_transmitter.transmit_pronto: #up code
          data: "0000 006D 0029 0000 00BC 003C 000E 001D 000E 001D 000E 001D 000E 001D 001D 000E 001D 000E 001D 000E 001D 000E 000E 001D 000E 001D 001D 000E 001D 000E 000E 001D 000E 001D 001D 000E 001D 000E 001D 000E 001D 000E 001D 000E 001D 000E 000E 001D 001D 000E 001D 000E 001D 000E 000E 001D 001D 000E 000E 001D 000E 001D 000E 001D 000E 001D 000E 001D 000E 001D 000E 001D 000E 001D 000E 001D 001D 000E 000E 001D 000E 001D 000E 001D 001D 000E"
          repeat:
            times: 4
            wait_time: 20ms

  - id: rf_down
    then:
      - remote_transmitter.transmit_pronto: #down code
          data: "0000 006D 0029 0000 00BC 003C 000E 001D 000E 001D 000E 001D 000E 001D 001D 000E 001D 000E 001D 000E 001D 000E 000E 001D 000E 001D 001D 000E 001D 000E 000E 001D 000E 001D 001D 000E 001D 000E 001D 000E 001D 000E 001D 000E 001D 000E 000E 001D 001D 000E 001D 000E 001D 000E 000E 001D 001D 000E 000E 001D 000E 001D 000E 001D 000E 001D 000E 001D 000E 001D 000E 001D 000E 001D 001D 000E 001D 000E 001D 000E 001D 000E 000E 001D 000E 001D"
          repeat:
            times: 4
            wait_time: 20ms

  - id: rf_stop
    then:
      - remote_transmitter.transmit_pronto: #stop code
          data: "0000 006D 0029 0000 00BC 003C 000E 001D 000E 001D 000E 001D 000E 001D 001D 000E 001D 000E 001D 000E 001D 000E 000E 001D 000E 001D 001D 000E 001D 000E 000E 001D 000E 001D 001D 000E 001D 000E 001D 000E 001D 000E 001D 000E 001D 000E 000E 001D 001D 000E 001D 000E 001D 000E 000E 001D 001D 000E 000E 001D 000E 001D 000E 001D 000E 001D 000E 001D 000E 001D 000E 001D 001D 000E 000E 001D 001D 000E 000E 001D 001D 000E 000E 001D 001D 000E"
          repeat:
            times: 4
            wait_time: 20ms

switch:
  - id: open_cover_switch
    platform: template
    turn_on_action:
      - script.execute: rf_up
    turn_off_action:
      - script.execute: rf_stop

  - id: close_cover_switch
    platform: template
    turn_on_action:
      - script.execute: rf_down
    turn_off_action:
      - script.execute: rf_stop

cover:
  - platform: time_based
    name: "Time-Based Cover"

    open_action:
      - switch.turn_on: open_cover_switch
    open_duration: 35s

    close_action:
      - switch.turn_on: close_cover_switch
    close_duration: 32s

    stop_action:
      - script.execute: rf_stop

# binary_sensor:
#   - platform: gpio
#     id: button
#     pin: GPIO14
#     on_press:
#       - switch.turn_on: open_cover_switch

remote_transmitter:
  - id: t1
    pin: 23
    carrier_duty_percent: 100%

#   - id: t2
#     pin:
#       number: 20
#       inverted: True
#     carrier_duty_percent: 50%

# remote_receiver:
#   pin: 22
#   dump: all
#   # Settings to optimize recognition of RF devices
#   tolerance: 50%
#   filter: 250us
#   idle: 10ms
#   buffer_size: 2kb