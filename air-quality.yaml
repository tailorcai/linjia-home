esphome:
  name: air-quality
  platformio_options:
    board_build.flash_mode: dio
    board_build.mcu: esp32c3
  on_boot:
    priority: 600
    then:
      - lambda: |-
          gpio_set_direction(GPIO_NUM_12, GPIO_MODE_OUTPUT);//写
          gpio_set_direction(GPIO_NUM_13, GPIO_MODE_OUTPUT);//写

esp32:
  board: esp32-c3-devkitm-1
  variant: esp32c3
  framework:
    type: esp-idf

# Enable logging
logger:
  hardware_uart: USB_SERIAL_JTAG
  level: DEBUG # defaults to DEBUG, NO

# Enable Home Assistant API
api:
  password: ""

ota:
  password: ""

packages:
  wifi: !include wifi.yaml

captive_portal:

light:
  - platform: status_led
    name: "Switch state"
    internal: true
    output: fake_status_led

uart:
  - id: uart_bus
    rx_pin: 19
    baud_rate: 9600
    debug:
      direction: RX
      dummy_receiver: true    
      after:
        bytes: 6
      sequence:
        - lambda: |-
            if( bytes[0] == 0x2C && bytes.size()>=6) {
              uint8_t sum = 0;
              for(auto it = bytes.begin();it != bytes.begin()+5;it++)
                sum += *it;
              if( sum == bytes[5]) {
                int co2 = bytes[1]*256+bytes[2];
                id(co2_sensor).publish_state(co2);
                ESP_LOGD("co2", "CO2 = %d", co2 );
              }
              else {
                ESP_LOGD("co2", "checksum error!" );
                UARTDebug::log_hex(direction, bytes, 32);
              }
            }

  - id: uart_pm
    rx_pin: 8
    baud_rate: 9600
    debug:
      direction: RX
      dummy_receiver: true    
      after:
        delimiter: "\r"
      sequence:
        - lambda: |-
            if( bytes.size()>=20 && bytes[0] == 0x4a && bytes[1] == 0x43 && bytes[19]==0xD ) {
              float pm_array[2] = { 0., 0.};
              std::memcpy( pm_array, bytes.data() + 2, 8);
              // UARTDebug::log_hex(direction, bytes, 32);
              id(pm2_5_sensor).publish_state(pm_array[0]);
              id(pm10_sensor).publish_state(pm_array[1]);          
            }

sensor:
  - platform: template
    id: co2_sensor
    name: "Co2 ppm"
    update_interval: 5s
    device_class: carbon_dioxide
    state_class: measurement
    unit_of_measurement: "ppm"

  - platform: template
    id: pm2_5_sensor
    name: "PM2.5"
    update_interval: 5s
    unit_of_measurement: "µg/m³"
    accuracy_decimals: 0
    device_class: pm25
    state_class: measurement

  - platform: template
    id: pm10_sensor
    name: "PM10"
    update_interval: 5s
    unit_of_measurement: "µg/m³"
    accuracy_decimals: 0
    device_class: pm10    
    state_class: measurement

  - platform: dht
    pin: GPIO18
    model: DHT11
    temperature:
      name: "Living Room Temperature"
    humidity:
      name: "Living Room Humidity"
    update_interval: 5s

output:
  - platform: template
    id: fake_status_led
    type: binary
    write_action:
      - lambda: |-
          // esphome don't allow using 12 & 13 for esp32c3, but my device is ok
          gpio_set_level(GPIO_NUM_13, state);